---
name: 🚀 Release

on:
  workflow_dispatch:
    branches: [ main, next ]

jobs:
  Setup:
    name: 🏗 Setup packages - [Release]
    runs-on: ubuntu-latest

    steps:
      - name: 🛒 Check out repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: 📁 Get Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: 📇 Extract branch name
        id: extract-branch-name
        run: echo "::set-output name=branch::$([[ -z "${GITHUB_HEAD_REF}" ]] && echo ${GITHUB_REF#refs/heads/} || echo ${GITHUB_HEAD_REF})"

      - name: 📁 Use cache for yarn
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: 📁 Use cache for modules
        id: modules-cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: modules-cache-${{ github.sha }}

      - name: 📁 Use cache for packages
        id: packages-cache
        uses: actions/cache@v2
        with:
          path: packages
          key: packages-cache-${{ github.sha }}

      - name: 🚧 Install
        env:
          BRANCH_NAME: ${{ steps.extract-branch-name.outputs.branch }}
        run: yarn

  Lint:
    name: 📝 Lint - [Release]
    runs-on: ubuntu-latest
    needs: Setup

    steps:
      - name: 🛒 Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 📁 Use cache for modules
        id: modules-cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: modules-cache-${{ github.sha }}

      - name: 📁 Use cache for packages
        id: packages-cache
        uses: actions/cache@v2
        with:
          path: packages
          key: packages-cache-${{ github.sha }}

      - name: 📝 Lint packages
        run: yarn lint

  Format:
    name: 🔀 Format - [Release]
    runs-on: ubuntu-latest
    needs: Setup

    steps:
      - name: 🛒 Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 📁 Use cache for modules
        id: modules-cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: modules-cache-${{ github.sha }}

      - name: 📁 Use cache for packages
        id: packages-cache
        uses: actions/cache@v2
        with:
          path: packages
          key: packages-cache-${{ github.sha }}

      - name: 🔀 Format
        run: yarn format

  Test:
    name: 🧪 Test - [Release]
    runs-on: ubuntu-latest
    needs: [Lint, Format]

    steps:
      - name: 🛒 Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 📁 Use cache for modules
        id: modules-cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: modules-cache-${{ github.sha }}

      - name: 📁 Use cache for packages
        id: packages-cache
        uses: actions/cache@v2
        with:
          path: packages
          key: packages-cache-${{ github.sha }}

      - name: 🧪 Test
        run: yarn test

  Release:
    name: 🚀 Release packages - [Release]
    runs-on: ubuntu-latest
    env:
      working-directory: ./

    needs: [Test]

    steps:
      - name: 🛒 Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: 📁 Use cache for modules
        id: modules-cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: modules-cache-${{ github.sha }}

      - name: 📁 Use cache for packages
        id: packages-cache
        uses: actions/cache@v2
        with:
          path: packages
          key: packages-cache-${{ github.sha }}

      - name: 💡 Build
        run: yarn build

      - name: 🧑‍💻 Set GitHub credentials
        run: |
          git config --global user.name "$GITHUB_ACTOR"
          git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: 🔒 Set npm token
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

      - name: 🚀 Publish packages
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx lerna publish -m "[skip ci] Release" --yes --create-release github
