# .github/workflows/release.yml

---
name: 🚀 Release

on:
  workflow_run:
    workflows: [Push]
    branches:
      - main
      - next
    types: 
      - completed
  pull_request:
    branches:
      - main
      - next

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  PublishBranch:
    name: 🚀 Publish experimental packages
    if: ${{ github.event_name == 'pull_request' && !startsWith(github.head_ref, 'changeset-release/') }}
    runs-on: ubuntu-latest
  
    steps:
      - name: 🐙️ Checkout
        id: release-checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 10

      - name: ⭐ Init
        id: release-init
        uses: ./.github/actions/init

      - name: 📦 Install
        id: release-install
        uses: ./.github/actions/install
        with:
          CACHE_PATH: ${{ steps.pnpm-config.outputs.STORE_PATH }}
          CACHE_KEY: ${{ runner.os }}-pnpm-store-cache-${{ steps.cache-rotation.outputs.YEAR_MONTH }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          CACHE_RESTORE_KEY: ${{ runner.os }}-pnpm-store-cache-${{ steps.cache-rotation.outputs.YEAR_MONTH }}-

      - name: 🔺️ Cache (turbo)
        id: release-cache-turbo
        uses: ./.github/actions/cache-turbo

      - name: 🏗️ Build
        id: release-build
        uses: ./.github/actions/build
        with:
          BUILD_COMMAND: build

      - name: 🔐 Setup npm token
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN_AUTOMATION }}" >> ~/.npmrc
        shell: bash

      - name: Publish snapshot release for branches
        if: ${{ github.event_name == 'pull_request' && !startsWith(github.head_ref, 'changeset-release/') }}
        shell: bash
        run: |
          yarn changeset version --snapshot experimental --snapshot-prerelease-template {tag}-${GITHUB_SHA:0:7}

          if [[ -n $(git diff --exit-code package.json) ]]; then
            yarn changeset publish --tag experimental --no-git-tag
          else
            echo "No unreleased changesets, not publishing snapshot release"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        


    