version: 2

aliases:
  - &restore-cache
      name: Restore Yarn Package Cache
      keys:
        - yarn-packages-{{ checksum "yarn.lock" }}

  - &run
    name: Install Dependencies
    command: yarn cache clean && yarn install --immutable

  - &save-cache
      name: Save Yarn Package Cache
      key: yarn-packages-{{ checksum "yarn.lock" }}
      paths:
        - ~/.cache/yarn

defaults: &defaults
  docker:
    - image: circleci/node:12-browsers
  working_directory: ~/repo

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore-cache
      - run: *run
      - save_cache: *save-cache
      - persist_to_workspace:
          root: ~/repo
          paths:
            - "*"

  publish:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore-cache
      - run: *run
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/repo/.npmrc
      - run:
          name: Setup all packages
          command: yarn setup
      - run:
          name: Ignore files
          command: git update-index --assume-unchanged ~/repo/.npmrc ~/repo/yarn.lock
      - run:
          name: Build packages
          command: yarn build.ci
      - run:
          name: Publish
          command: yarn multi-semantic-release --execasync
          # command: yarn lerna exec --concurrency 1 "npx --no-install semantic-release -e semantic-release-monorepo" && node -e "require('semantic-release-monorepo-hooks').hookAfterAll()"

workflows:
  version: 2
  build:
    jobs:
      - build
      - publish:
          requires: [build]
          filters:
            branches:
              only: main